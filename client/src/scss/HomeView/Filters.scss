.filter {
  background: #dfe6f6;
  box-shadow:  6px 6px 0px #a8b5f6,
             -6px -6px 0px #fbfbfe;
}

.btn-container{
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  gap: 1em;
  background: #dfe6f6;
  min-height: 10em;
  padding: 1em 1em 1em 1em;

  button {
    font-size: 1em;
    background: rgba(132, 238, 254, 0.54);
    background: linear-gradient(180deg, rgba(132, 238, 254, 0.746) 0%, rgba(96, 39, 240, 0.803) 64%);
    border-radius: 3em;
    font-family: var(--font-poppins);
    color: #dfe6f6;
    height: 2em;
    width: 60%;

  }
  
}

.accordion{ 
  display: block;
  text-align: left;
  width: 100%; 
  min-width: 300px;
  
  &:hover{
  
    // max-height technique
    .accordion-content{
      // If use the "height: auto", the effect not works. Is necessary some value for the CSS create a CSS animate, and we can use "max-height" with a great value for emulate this effect.
      display: grid;
      max-height: 450px;
      align-items: center;
      box-shadow:  6px 6px 12px #c3bbe5,
             -6px -6px 12px #fbfbfe;
      background: #dfe6f6;
			overflow: auto;

			.included {
        color: #92a1c6;
        border-radius: 2em;
        padding-left: 1em;  

				&:hover {
					background: rgb(132,237,254);
          background: linear-gradient(180deg, rgba(132, 238, 254, 0.746) 0%, rgba(97,39,240,1) 64%);
          color:#fff;
					/* transition: 1s ease */
				}
			}

    }
  
  }
}

.accordion-content{
  -webkit-transition: max-height 1s; 
  -moz-transition: max-height 1s; 
  -ms-transition: max-height 1s; 
  -o-transition: max-height 1s; 
  transition: max-height 1s;  
  background: #ffffff;
  overflow: hidden;
  // "height: 0" not work with css transitions
  max-height: 0;
}


.accordion-inner{
  padding: 0 15px;
  display: grid;

  input {
    display: none;
  }
}

.accordion-toggle{
  -webkit-transition: background .1s linear;   
  -moz-transition: background .1s linear;   
  -ms-transition: background .1s linear;   
  -o-transition: background .1s linear;   
  transition: background .1s linear;   
  /* box-shadow:  6px 6px 12px #c3bbe5,
             -6px -6px 12px #fbfbfe;
  background: #dfe6f6; */
  border-radius: 3px;
  color: #0000EE;
  display: block;
  font-size: 30px;
  margin: 0 0 0;
  padding: 10px;
  text-align: center;
  text-decoration: none;
  
  &:hover{
    background: darken(#ffffff, 15%);
  }
  
}

.holi {
	h1 {
		font-size: 90px;
		margin: 0;
		line-height: 1.1em;
	}
	position: relative;
	--maskX: 0;
	--maskY: 50;
}

.titleWrapper {
	color: #7e2a2a;
	cursor: pointer;
}

.cloneWrapper {
	position: absolute;
	top: 0;
	left: 0;
	color: #631717;
	clip-path: polygon(0 0, calc(var(--maskX) * 1%) 0, calc(var(--maskY) * 1%) 100%, 0 100%);
}

/* .melt-enter-active { 
	position: absolute;
} */
.wer { 
	position: absolute;
	height: 300px;
	width: 300px;
	background-color: rgb(34, 115, 128);
	animation: melt-leave 3s ease-in-out ;
}

/* @keyframes melt-enter {
  0% {
    clip-path: polygon(0% 100%, 100% 100%, 99.9% 100%, 100% 100%, 0% 100%, 0% 0%);
  }
  100% {
    clip-path: polygon(0% 100%, 100% 100%, 99.9% 100%, 100% 100%, 100% 0%, 0% 0%);
	}
} */

@keyframes melt-leave {
  0% {
    clip-path: path('M468.5,319Q440,388,379,423.5Q318,459,260.5,427Q203,395,134.5,389.5Q66,384,46,317Q26,250,51,187Q76,124,131.5,89.5Q187,55,252.5,47.5Q318,40,370,82.5Q422,125,459.5,187.5Q497,250,468.5,319Z');
  }
  100% {
    clip-path: path('M468,311.5Q441,373,388,405Q335,437,285,395Q235,353,171.5,383.5Q108,414,78,361.5Q48,309,54,251.5Q60,194,95,153Q130,112,175.5,78.5Q221,45,276,59Q331,73,340.5,129Q350,185,422.5,217.5Q495,250,468,311.5Z');
		color: #08666a;
  }
}